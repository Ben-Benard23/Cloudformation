AWSTemplateFormatVersion: "2010-09-09"

Description: This template creates a vpc with 2 public and 4 private subnets

Metadata:

Parameters:
  VpcCIDR:
    Default: 10.0.0.0/16
    Description: Please enter the ip range for this vpc
    Type: String


  PublicSubnet1Cidr:
    Default: 10.0.0.0/24
    Description: Please enter the ip range for the public subnet 1 
    Type: String

  PublicSubnet2Cidr:
    Default: 10.0.1.0/24
    Description: Please enter the ip range for the public subnet 2
    Type: String

  PrivateSubnet1Cidr:
    Default: 10.0.2.0/24
    Description: Please enter the ip range for the private subnet 1
    Type: String

  PrivateSubnet2Cidr:
    Default: 10.0.3.0/24
    Description: Please enter the ip range for the private subnet 2
    Type: String

  PrivateSubnet3Cidr:
    Default: 10.0.4.0/24
    Description: Please enter the ip range for the private subnet 3
    Type: String

  PrivateSubnet4Cidr:
    Default: 10.0.5.0/24
    Description: Please enter the ip range for the private subnet 4
    Type: String

  SSHLocation:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to access the web server using SSH.
    MaxLength: '18'
    MinLength: '9'
    Type: String
        

Resources:
  DevVPC:
  Type: AWS::EC2::VPC
  Properties:
    CidrBlock: !Ref VpcCIDR
    EnableDnsSupport: 'true'
    EnableDnsHostnames: 'true'
    Tags:
     - Key: Name
       Value: DevVPC

  DevIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: DevIgw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DevVPC
      InternetGatewayId: !Ref DevIgw

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: PublicSubnet 1 web tire

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: PublicSubnet 2 web tier
        # create a route table for the public subnets

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DevVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

        # create a public route destination internet and target igw

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: DevIgw
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref DevIgw

       # associate the public subnets to the route table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
     # create private subnets 

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivateSubnet 1 app tier

    PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivateSubnet 2 app tier

    PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PrivateSubnet3Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivateSubnet 3 database tier

    PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: !Ref PrivateSubnet4Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: PrivateSubnet 4 database tier


      


Outputs:

